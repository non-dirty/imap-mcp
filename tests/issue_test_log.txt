Testing Automated Status Workflow - issue #16:

Step 1: Create a Test Issue
Let's create a simple test issue to verify our automated workflow:

bash
CopyInsert in Terminal
gh issue create --title "Test Automated Status Workflow" --body "This is a test issue to verify that our automated status updates are working correctly." --label "status:prioritized" --label "priority:3"
This command will create a new issue with:

A descriptive title
A simple description
The initial "prioritized" status
A lower priority (3) to avoid interfering with real work
Feel free to try this command and let me know if you encounter any errors!

Step 2: Make Changes and Reference the Issue
Once you have your test issue (let's say it's issue #42 for this example), create a branch for it:

bash
CopyInsert in Terminal
git checkout -b test/issue-42-workflow-test
Now, make a simple change (or an empty commit) that references the issue:

bash
CopyInsert
# Option 1: Empty commit with reference
git commit --allow-empty -m "refs #42: Start testing automated workflow"

# Option 2: Make a small change to a file and commit
# echo "# Test comment" >> README.md
# git add README.md
# git commit -m "refs #42: Add test comment to README"
Then push your branch:

bash
CopyInsert in Terminal
git push -u origin test/issue-42-workflow-test
Step 3: Create a Pull Request
Now create a pull request that references the issue:

bash
CopyInsert in Terminal
gh pr create --title "Test PR for issue #42" --body "This PR tests the automated status updates. Closes #42" --base main
This will:

Create a PR referencing issue #42
Include "Closes #42" to ensure the issue is closed when merged
Set the base branch to main
Step 4: Monitor Status Changes
After each step, you can check the issue's status using:

bash
CopyInsert in Terminal
gh issue view 42 --json labels
You should see:

After your first commit: status changes to "in-progress"
After creating the PR: status changes to "in-review"
After merging the PR: status changes to "completed"
What to Watch For
As you go through these steps, pay attention to:

GitHub Actions logs (visible in the Actions tab of your repository)
Comments added to the issue by the automation
Status label changes on the issue
Any errors that might appear
Let me know if you encounter any issues or have questions as you go through these steps!
